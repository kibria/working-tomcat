$class=com.escenic.webservice.helper.ListPoolHelper
objectLoader=//io/api/ObjectLoader
name=list-pool
secondsToLive=0
serializers=./ContentSerializers
handleTypeName = ${./ListPoolEntryHelper.name}
listHelper = ./ListHelper
documentation   =  A list is a collection of content items.  When an item is placed in \
  a list a handle is created. The handle represents the content item's placement in the\
  list.  It exists until content item is removed from the list, or is moved (it then \
  gets a new handle). \n\
  \
  This resource is available as both text/uri-list and application/xhtml+xml. \
  The URI list representation shows the content items in the list. \
  This is a read-only view of the list \n\
  \
  The XHTML representation shows the handles as <a rel="handle"> links, but for efficiency, pairs them \
  with the edit URI of the content item too, as <a rel="edit">. \n\
  \
  To insert items to the top of this list, this resource accepts POST requests with \
  Content-Type set to text/uri-list.  Each URI in the text/uri-list must be the edit URI of a \
  content item from the same web service.\n\
  \
  To see what item hides itself behind a handle, the handle accepts GET requests, and it \
  responds with a text/uri-list of the content item itself.\n\
  \
  To remove an item, the handle resource can be DELETEd.  The content item will remain \
  unchanged, but will no longer be in the list\n\
  \
  To insert items inbetween two items, the handle also accept POST methods just like \
  this resource (text/uri-lists containing content items).  The items will be \
  added below the handles.\n\
  \
  It is useful to note that items can not appear twice in the list. If a POST tries to \
  add an existing item to a list, the item is simply moved to the new location, behind \
  a new handle.  The old handle disappears.\n\

